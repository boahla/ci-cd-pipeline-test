name: Auto Merge Hotfix to Other Branches

on:
  pull_request:
    types: [closed] # PR이 종료되었을 때만 실행 (머지된 경우)
    branches:
      - "main"
      - "release"

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Remote update Git
        run: |
          git remote update

      - name: Check if the PR is a hotfix branch
        run: |
          # Get the source branch of the PR
          pr_source_branch="${{ github.event.pull_request.head.ref }}"
          pr_target_branch="${{ github.event.pull_request.base.ref }}"

          echo "Source branch: $pr_source_branch"
          echo "Target branch: $pr_target_branch"

          # Check if the source branch is a hotfix branch
          if [[ "$pr_source_branch" != hotfix/* ]]; then
            echo "This is not a hotfix branch, exiting." && exit 1
          fi

          # Now proceed to merge into develop, stage, release, main
          BRANCHES=("develop" "stage" "release" "main")

          # Filtering branches, have to merge
          filtered_branches=()

          for branch in "${BRANCHES[@]}"; do
          if [[ "$branch" != "$pr_target_branch" ]]; then
          filtered_branches+=("$branch")
          fi
          done

          # Merge each branches
          for BRANCH in "${filtered_branches[@]}"; do
            git checkout $BRANCH
            git pull origin $BRANCH
            git merge origin/"$pr_source_branch" --no-ff -m "Merge hotfix $pr_source_branch into $BRANCH"

            # Authenticate with GITHUB_TOKEN
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git push origin $BRANCH
          done
